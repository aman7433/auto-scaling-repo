name: Deploy Django Project to Server

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main  # Trigger this action when pushing to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up SSH to access the remote server
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.MAIN_KEY }}

      # Step 3: SSH into the remote server and set up the Django app
      - name: Clone repository and set up Django
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} << 'EOF'
            # Update the server and install necessary packages
            sudo apt update && sudo apt upgrade -y
            sudo apt install -y git python3-pip python3-dev libpq-dev

            # Navigate to the user's home directory and check if the repository exists
            if [ ! -d "/home/${{ secrets.USER }}/simple-django-app" ]; then
              # Clone the repository if it does not exist
              git clone https://github.com/deparkes/simple-django-app.git /home/${{ secrets.USER }}/simple-django-app
            else
              # Pull the latest changes if the repo already exists
              cd /home/${{ secrets.USER }}/simple-django-app && git pull origin main
            fi

            # Navigate to the project directory
            cd /home/${{ secrets.USER }}/simple-django-app/cool_counters

            # Set up a virtual environment
            python3 -m venv venv
            source venv/bin/activate

            # Install the required dependencies
            pip install -r requirements.txt

            # Run migrations
            python manage.py migrate

            # Collect static files (if needed)
            python manage.py collectstatic --noinput

            # Optionally, start the Django app with Gunicorn for production (use 0.0.0.0 to bind to all interfaces)
            # In production, it's better to use Gunicorn or another WSGI server instead of runserver
            # Example: gunicorn --workers 3 myproject.wsgi:application
            nohup python manage.py runserver 0.0.0.0:8000 &

          EOF
